#!/usr/bin/env bash

# dotfiles

#  Copyright 2020 Jay Lamb, jaylamb@gmail.com
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

#File: install
#Description: dotfiles install script

function error()
{
	>&2 echo "$script_name: $1"
}

function abort()
{
	if [[ "$#" -gt 0 ]]; then
		error "$1, aborting"
	fi

	exit 1
}

function display_help_text()
{
	echo "NAME"
	echo "	$script_name - Install dotfiles."
	echo "SYNOPSIS"
	echo "	$script_name --help"
	echo "	$script_name --version"
	echo "	$script_name --all"
	echo "	$script_name [<dotfile_names>]"
	echo "	$script_name"
	echo "OPTIONS"
	echo "	--all"
	echo "		Install all dotfiles."
	echo "	--help"
	echo "		Display this help text."
	echo "	--version"
	echo "		Display the version number of this script."
	echo "	--[<dotfiles>]"
	echo "		 A list of dotfiles to install."
	echo "EXAMPLES"
	echo "	$script_name --help"
	echo "	$script_name --version"
	echo "  $script_name --all"
	echo "  $script_name [<dotfile_name(s)>]"
}

function display_version()
{
	echo "$script_name - version $(git describe --all --dirty --broken)"
}

function install_dotfiles()
{
	while [[ "$#" -gt 0 ]]; do
		local hook="$1"
		shift

		rm -f "$repository_dir/.git/hooks/$hook"

		if ! ln -s "$hooks_dir/$hook" "$repository_dir/.git/hooks/$hook"; then
			abort "'$hook' installation failed"
		fi
	done
}

function main()
{
	script_dir=$( readlink -f "$0" ); readonly script_dir
	script_name=$( basename "$script_dir" ); readonly script_name
	hooks_dir=$( dirname "$script_dir" ); readonly hooks_dir
	repository_dir=$( readlink -f "$hooks_dir/../.." ); readonly repository_dir

	#mapfile -t hooks < <( find "$repository_dir" -type f | sed '/README/d; /LICENSE/d; /install/d; /.git\//d; /*git\/hooks/d; /.fonts*/d' )

	while [[ "$#" -gt 0 ]]; do
		local argument="$1"
		shift

		case "$argument" in
			--help)
				display_help_text
				exit
				;;
			--version)
				display_version
				exit
				;;
			--*)
				;&
			-*)
				abort "'$argument' is not a supported option"
				;;
			*)
				abort "'$argument' is not a valid argument"
				;;
		esac
	done

	#install_dotfiles "${dotfiles[@]}"
}

main "$@"
